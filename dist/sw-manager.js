var o=null,a=!1,s=!navigator.onLine;async function l(){if(!("serviceWorker"in navigator))return console.warn("Service Worker not supported"),!1;try{return await d(),g(),m(),console.log("Service Worker Manager initialized"),!0}catch(e){return console.error("Service Worker initialization failed:",e),!1}}async function d(){try{let e=window.location.pathname.includes("/Pages/"),t=e?"../service-worker.js":"./service-worker.js",n=e?"../":"./";return o=await navigator.serviceWorker.register(t,{scope:n}),console.log("ServiceWorker registered successfully with scope:",o.scope),o.installing?(console.log("ServiceWorker installing..."),p(o.installing)):o.waiting?(console.log("ServiceWorker waiting..."),c()):o.active&&(console.log("ServiceWorker active"),w()),o}catch(e){throw console.error("ServiceWorker registration failed:",e),e}}function p(e){e.addEventListener("statechange",function(){e.state==="installed"&&(navigator.serviceWorker.controller?c():w())})}function g(){o&&o.addEventListener("updatefound",function(){let e=o.installing;console.log("New ServiceWorker found"),e.addEventListener("statechange",function(){e.state==="installed"&&navigator.serviceWorker.controller&&c()})})}function m(){window.addEventListener("online",function(){s=!1,k(),S()}),window.addEventListener("offline",function(){s=!0,y()})}function c(){a=!0;let e=document.getElementById("sw-update-notification");e||(e=h(),document.body.appendChild(e)),e.classList.add("show"),window.dispatchEvent(new CustomEvent("sw-update-available"))}function h(){let e=document.createElement("div");return e.id="sw-update-notification",e.className="sw-notification",e.innerHTML=`
    <div class="sw-notification-content">
      <span class="sw-notification-text">\u{1F504} A new version of Kolby's Pok\xE9dex is available!</span>
      <div class="sw-notification-details">
        <span class="sw-notification-detail">Refresh to get the latest features and bug fixes.</span>
      </div>
      <div class="sw-notification-buttons">
        <button id="sw-update-reload" class="sw-button sw-button-primary">Reload Now</button>
        <button id="sw-dismiss-update" class="sw-button sw-button-secondary">Later</button>
      </div>
    </div>
  `,e.querySelector("#sw-update-reload").addEventListener("click",function(){u(),e.classList.remove("show")}),e.querySelector("#sw-dismiss-update").addEventListener("click",function(){f(),e.classList.remove("show")}),e}function u(){if(!o||!o.waiting){console.warn("No service worker update available");return}try{o.waiting.postMessage({type:"SKIP_WAITING"}),navigator.serviceWorker.addEventListener("controllerchange",function(){window.location.reload()})}catch(e){console.error("Failed to apply service worker update:",e)}}function f(){let e=document.getElementById("sw-update-notification");e&&e.classList.remove("show"),a=!1}function w(){r("App is ready for offline use!","success")}function k(){r("You are back online!","success"),v(!0)}function y(){r("You are offline. Some features may be limited.","warning"),v(!1)}function v(e){let t=document.getElementById("connection-indicator");t||(t=document.createElement("div"),t.id="connection-indicator",t.className="connection-indicator",document.body.appendChild(t)),t.className="connection-indicator "+(e?"online":"offline"),t.textContent=e?"Online":"Offline",t.style.display=e?"none":"block"}function S(){"serviceWorker"in navigator&&"sync"in window.ServiceWorkerRegistration.prototype&&o&&o.sync&&o.sync.register("background-sync").then(function(){console.log("Background sync registered")}).catch(function(e){console.warn("Background sync registration failed:",e)})}function E(){return new Promise(function(e,t){if(!navigator.serviceWorker.controller){t(new Error("No active service worker"));return}let n=new MessageChannel;n.port1.onmessage=function(i){i.data.success?e(i.data.status):t(new Error(i.data.error||"Failed to get cache status"))},navigator.serviceWorker.controller.postMessage({type:"GET_CACHE_STATUS"},[n.port2])})}function W(){return new Promise(function(e,t){if(!navigator.serviceWorker.controller){t(new Error("No active service worker"));return}let n=new MessageChannel;n.port1.onmessage=function(i){i.data.success?e():t(new Error(i.data.error||"Failed to clear caches"))},navigator.serviceWorker.controller.postMessage({type:"CLEAR_CACHE"},[n.port2])})}function b(e){return!e||!Array.isArray(e)?Promise.resolve():caches.open("pokedex-dynamic-v3").then(function(t){return Promise.allSettled(e.map(function(n){return fetch(n).then(function(i){if(i.ok)return t.put(n,i)}).catch(function(i){console.warn("Failed to preload:",n,i)})}))}).then(function(){console.log("Resources preloaded successfully")}).catch(function(t){console.error("Failed to preload resources:",t)})}function r(e,t){t=t||"info";let n=document.getElementById("sw-toast");n||(n=document.createElement("div"),n.id="sw-toast",n.className="sw-toast",document.body.appendChild(n)),n.className="sw-toast sw-toast-"+t+" show",n.textContent=e,setTimeout(function(){n.classList.remove("show")},5e3)}function C(){return{isSupported:"serviceWorker"in navigator,isRegistered:!!o,isUpdateAvailable:a,isOffline:s,registration:o}}document.addEventListener("DOMContentLoaded",function(){l()});window.ServiceWorkerManager={initialize:l,register:d,applyUpdate:u,dismissUpdate:f,getCacheStatus:E,clearCaches:W,preloadResources:b,getStatus:C,showToast:r};
